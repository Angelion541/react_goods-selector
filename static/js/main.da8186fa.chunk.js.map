{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","handleGood","good","setState","includes","filter","select","clear","goods","this","className","length","join","type","classNames","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAyB,CACvBC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACZ,IAAQF,EAAkB,EAAKD,MAAvBC,cAER,EAAKG,SAAS,CACZH,cACEA,EAAcI,SAASF,GACnBF,EAAcK,QAAO,SAAAC,GAAM,OAAIA,IAAWJ,KAD9C,sBAEQF,GAFR,CAEuBE,O,EAK7BK,MAAQ,WACN,EAAKJ,SAAS,CAAEH,cAAe,M,4CAGjC,WAA2B,IAENQ,EAFK,OAChBR,EAAkBS,KAAKV,MAAvBC,cAKR,OACE,sBAAKU,UAAU,cAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,QAAd,mBACMV,EAAcW,QARPH,EASGR,EATkBQ,EAAMG,OAAS,EAAf,UACjCX,EAAcY,KAAK,MADc,2BAEjCZ,EAAcY,KAAK,MAFc,iBAU5B,uBAGLZ,EAAcW,OACb,wBACEE,KAAK,SACLH,UAAWI,IACT,SACA,aACA,cACA,aACA,YAEFC,QAASN,KAAKF,MAThB,mBAaE,QAEN,qBAAKG,UAAU,iBAAf,SACGb,EAAgBmB,KAAI,SAAAd,GAAI,OACvB,sBAAKQ,UAAU,WAAf,UACE,yBAASA,UAAU,uBAAnB,SAIGR,IAGH,wBACEW,KAAK,SACLH,UAAWI,IACT,SACA,WACCd,EAAcI,SAASF,GAEpB,YADA,0BAGNa,QAAS,kBAAM,EAAKd,WAAWC,IATjC,SAWGF,EAAcI,SAASF,GACpB,SACA,aArBuBA,e,GAtDzBe,IAAMC,WAqFTpB,ICvGfqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.da8186fa.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGoods: ['Jam'],\n  };\n\n  handleGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({\n      selectedGoods: (\n        selectedGoods.includes(good)\n          ? selectedGoods.filter(select => select !== good)\n          : [...selectedGoods, good]\n      ),\n    });\n  };\n\n  clear = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render(): React.ReactNode {\n    const { selectedGoods } = this.state;\n    const fullTitle = (goods: string[]) => (goods.length > 1\n      ? `${selectedGoods.join(', ')} are selected`\n      : `${selectedGoods.join(', ')} is selected`);\n\n    return (\n      <div className=\"App content\">\n        <div className=\"content__title\">\n          <h1 className=\"title\">\n            {`${selectedGoods.length\n              ? fullTitle(selectedGoods)\n              : 'No goods selected'}`}\n          </h1>\n\n          {selectedGoods.length ? (\n            <button\n              type=\"button\"\n              className={classNames(\n                'button',\n                'is-rounded',\n                'is-outlined',\n                'is-warning',\n                'is-light',\n              )}\n              onClick={this.clear}\n            >\n              Clear\n            </button>\n          ) : null}\n        </div>\n        <div className=\"content__goods\">\n          {goodsFromServer.map(good => (\n            <div className=\"line box\" key={good}>\n              <article className=\"\n                is-large\n                line__item\"\n              >\n                {good}\n              </article>\n\n              <button\n                type=\"button\"\n                className={classNames(\n                  'button',\n                  'is-light',\n                  !selectedGoods.includes(good)\n                    ? 'is-success is-outlined'\n                    : 'is-danger',\n                )}\n                onClick={() => this.handleGood(good)}\n              >\n                {selectedGoods.includes(good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}